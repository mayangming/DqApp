apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.huawei.agconnect'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        multiDexEnabled true

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }


        buildConfigField("String", "UMENG_KEY", rootProject.ext.third.umeng_key)
        buildConfigField("String", "UMENG_CHANNEL", rootProject.ext.third.umeng_channel)
        buildConfigField("String", "YX_APPKEY", rootProject.ext.third.yx_appkey)
        buildConfigField("String", "YX_RED_PACKET_KEY", rootProject.ext.third.yx_red_packet_key)
        buildConfigField("String", "WX_PAY_APPID", rootProject.ext.third.wx_pay_app_id)
        buildConfigField("String", "WX_PAY_API_KEY", rootProject.ext.third.wx_pay_api_key)
        buildConfigField("String", "WX_PAY_PACKAGE", rootProject.ext.third.wx_pay_pacakage)
        buildConfigField("boolean", "IS_DUBUG","$rootProject.ext.isDebug")
        buildConfigField("String", "MI_APP_ID",'"2882303761518277651"')
        buildConfigField("String", "MI_KEY",'"5811827758651"')
        buildConfigField("String", "VIVO_APP_ID",'"103494129"')
        buildConfigField("String", "VIVO_APP_KEY",'"65ea100c79d4f6ffc0fa995ed3be1bc6"')
        buildConfigField("String", "VIVO_APP_SECRET",'"8c264190-80df-4e6d-b203-31c815f463f0"')
        buildConfigField("String", "OPPO_APP_KEY",'"e3d8c90c895646dda7c3d22db2e646cf"')
        buildConfigField("String", "OPPO_APP_SECRET",'"78aa9a4f6a1c4757b34445c1436ec54c"')
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res',
                            'src/main/nim'
                    ]

            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
    }

    flavorDimensions rootProject.ext.app.name

    //渠道
    productFlavors {

        huawei{
            dimension rootProject.ext.app.name
        }
//        yingyongbao{
//            dimension rootProject.ext.app.name
//        }
//        baidu{
//            dimension rootProject.ext.app.name
//        }
//        xiaomi{
//            dimension rootProject.ext.app.name
//        }
//        oppo{
//            dimension rootProject.ext.app.name
//        }
//        vivo{
//            dimension rootProject.ext.app.name
//        }
    }

    productFlavors.all {
        flavor -> rootProject.ext.third.umeng_key
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries = false //关闭预编译
        javaMaxHeapSize "4g" //设置虚拟机堆内存空间大小,避免在编译期间内存溢出
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
    }

    signingConfigs {
        debug {
            storeFile file('daquan.jks')
            storePassword 'dq000000'
            keyAlias 'daquan'
            keyPassword 'dq666666'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            storeFile file('daquan.jks')
            storePassword 'dq000000'
            keyAlias 'daquan'
            keyPassword 'dq666666'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-base.pro', 'proguard-rules.pro'
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.debug

            android.applicationVariants.all {
                variant ->
                    variant.outputs.all {
//                        apk_渠道名-版本号-版本名称-编译时间.apk
                        outputFileName = "apk_${rootProject.ext.app.name}-v${defaultConfig.versionName}-${releaseTime()}-${variant.productFlavors[0].name}.apk"

                    }
            }
        }
        release {
            // 是否进行混淆
            minifyEnabled false
            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-base.pro', 'proguard-rules.pro'
            // 移除无用的resource文件
            shrinkResources false
            //Zipalign优化
            zipAlignEnabled true
            signingConfig signingConfigs.release

            android.applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    // apk_渠道名-版本号-版本名称-编译时间.apk
                    outputFileName = "apk_${rootProject.ext.app.name}-v${defaultConfig.versionName}-${releaseTime()}-${variant.productFlavors[0].name}.apk"
                }
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    api fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    api rootProject.ext.dependencies.multidex
    api rootProject.ext.dependencies.SmartRefreshLayout
    //noinspection GradleCompatible
    api rootProject.ext.dependencies.design
    api rootProject.ext.dependencies.constraint_layout
    api rootProject.ext.dependencies.oss_android_sdk
    api rootProject.ext.dependencies.rxjava
    api rootProject.ext.dependencies.rxandroid
    api rootProject.ext.dependencies.rxscreenshot_detector
    api rootProject.ext.dependencies.rxlifecycle_components
    api rootProject.ext.dependencies.swiperefreshlayout
    implementation rootProject.ext.dependencies.drawerlayout
    implementation rootProject.ext.dependencies.documentfile
    implementation rootProject.ext.dependencies.viewpager2
    api project(':CNCarema')
    api project(':CNImagePicker')
    api project(':uikit')
    api project(':QCPickerView')
    implementation project(':turntableview')
    implementation project(':passlibrary')
    implementation project(':redlibary')
    implementation project(':httplibary')
    implementation project(':dqimsdk')
    implementation project(':matisse')
    implementation project(':recorderlib')
    implementation project(':adlibary')
    api rootProject.ext.dependencies.kotlin_config
    api rootProject.ext.dependencies.banner
//    implementation files('libs/pinyin4j-2.5.0.jar')
    //    implementation project(path: ':jrmfbaselib')
    //    implementation project(path: ':jrmfwalletlib')
    //    implementation project(path: ':jrmfrplib')
    //    implementation 'com.umeng.umsdk:analytics:8.1.4'
    //    implementation 'com.umeng.umsdk:common:2.1.8'
    testImplementation 'junit:junit:4.12'
    //=======支付宝支付
    //微信分享、登录、收藏、支付
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.5.8'
    /** 腾讯bugly日志搜集库    */
    implementation 'com.tencent.bugly:crashreport:3.1.0'
    implementation 'com.github.iwgang:countdownview:2.1.6'
    implementation files('libs/umeng-share-wechat-simplify-6.9.8.jar')
    implementation files('libs/umeng-analytics-8.1.4.jar')
    implementation files('libs/umeng-common-2.1.8.jar')
    //红点提示 github地址：   https://github.com/qstumn/BadgeView
    implementation 'q.rorbin:badgeview:1.1.3'
    //  录制mp3的库 github地址: https://github.com/zhaolewei/ZlwAudioRecorder
    //    implementation 'com.github.zhaolewei:ZlwAudioRecorder:v1.07'
    //  权限检测  https://github.com/tbruyelle/RxPermissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    implementation files('libs/alipaySdk-20180403.jar')
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-alpha06'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'com.hjq:xxpermissions:8.6'
}
repositories {
    mavenCentral()
}


static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}
